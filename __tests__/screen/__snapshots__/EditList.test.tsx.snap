// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Edit List Screen snapshot created successfully 1`] = `
<RCTSafeAreaView
  style={
    {
      "backgroundColor": "#ECEEF0",
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "backgroundColor": "#ECEEF0",
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          },
          undefined,
        ]
      }
      testID="headersWithButton"
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 20,
              "height": 40,
              "justifyContent": "center",
              "opacity": 1,
              "width": 40,
            },
            {
              "backgroundColor": "transparent",
              "marginLeft": -16,
            },
          ]
        }
      >
        <View
          testID="customIcon"
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#000000",
                  "fontSize": 40,
                },
                undefined,
                {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="cancelBtn"
        >
          <Text
            style={
              {
                "color": "#000000",
                "fontFamily": "Roboto-Regular",
                "fontSize": 14,
              }
            }
          >
            Cancel
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#0093BB",
                "borderRadius": 30,
                "height": 45,
                "justifyContent": "center",
                "width": "33%",
              },
              undefined,
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Roboto-Bold",
                  "fontSize": 14,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Save
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "backgroundColor": undefined,
          "height": 18,
          "width": undefined,
        }
      }
    />
    <Text
      style={
        {
          "color": "#000000",
          "fontFamily": "Roboto-Bold",
          "fontSize": 18,
        }
      }
    />
    <View
      style={
        {
          "backgroundColor": undefined,
          "height": 24,
          "width": undefined,
        }
      }
    />
  </View>
  <RCTScrollView
    bounces={false}
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEnabled={false}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View />
  </RCTScrollView>
  <View
    style={
      {
        "alignItems": "center",
        "borderBottomColor": "#CCCDCF",
        "borderBottomWidth": 1,
        "borderTopColor": "#CCCDCF",
        "borderTopWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 22,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#005AA5",
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
          "marginRight": 16,
          "width": 30,
        }
      }
      testID="customIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "#FFFFFF",
              "fontSize": 12,
            },
            undefined,
            {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
    <TextInput
      autoFocus={true}
      maxLength={80}
      onChangeText={[Function]}
      style={
        {
          "color": "#000000",
          "flex": 1,
          "fontFamily": "Roboto-Regular",
          "fontSize": 16,
        }
      }
      testID="listCardTextInput"
      value=""
    />
  </View>
</RCTSafeAreaView>
`;
